alias la='ls -la'
alias ta='tmux attach -t dev || tmux new -s dev'

# git
alias gs='git status'
alias gd='git diff'
alias gl='git log'
alias gull='git pull'
alias gush='git push'
alias gushstable='git checkout stable && git pull && git merge master && git push && git checkout master'

# dev
alias be='bundle exec'
alias rake='bundle exec rake'
alias rails='bundle exec rails'
alias rspec='bundle exec rspec'
alias fs='foreman start'
alias resque-start='bundle exec rake resque:work QUEUES=* TERM_CHILD=1'

# docker
alias drun='docker run'
alias dstart='docker start'
alias dstop='docker stop'
alias docker-create-pg='docker run -d -p 5432:5432 --name pg -e POSTGRES_PASSWORD=postgres -d postgres'
alias docker-create-redis='docker run -d -p 6379:6379 --name redis redis'
alias docker-create-es14='docker run -d -p 9200:9200 --name es14 elasticsearch:1.4'
alias docker-create-es2='docker run -d -p 9200:9200 --name es2 elasticsearch:2'

# tools
alias password='pwgen -Cs 20 1 | tr -d " " | tr -d "\n" | pbcopy'

# system
alias show='defaults write com.apple.finder AppleShowAllFiles true && killall Finder'
alias hide='defaults write com.apple.finder AppleShowAllFiles false && killall Finder'

# misc
alias flushdns='sudo dscacheutil -flushcache && sudo killall -HUP mDNSResponder'
alias workhard='cat /etc/hosts | sed "/127.0.0.1 vk.com/s/^#//g" | sudo tee /etc/hosts'
alias procrastinate='cat /etc/hosts | sed "/127.0.0.1 vk.com/s/^/#/g" | sudo tee /etc/hosts'

# functions
function iconv-recursive {
    find . -type f -name '*.html' -o -name '*.html.erb' | while read file
    do
        echo $file
        iconv -f CP1251 -t UTF-8 "$file" > tmp
        mv -f tmp "$file"
    done
}

function remove-layout {
    if [ -z $1 ]
    then
        echo "Empty pattern"
        return 1
    fi

    find . -type f -name '*.html' -o -name '*.html.erb' | while read file
    do
        echo $file
        sed -n "$1" "$file" | sed '1d' | sed '$d' > tmp
        mv -f tmp "$file"
    done
}

function pg-recreate {
    if [ -z $1 ]; then
        echo "Missing database"
        return 1
    fi

    psql postgres -c "DROP DATABASE $1"
    psql postgres -c "CREATE DATABASE $1"
}

function find-big-files {
    find /Users/ -size +100M 2>/dev/null
}

function clean-attrs {
    if [ -z $1 ]; then
        echo "Specify the path"
        return 1
    fi

    chmod -RN $1
    xattr -rc $1
}

function unmount {
    if [ -z "$1" ]; then
        echo "Specify mount point"
        return 1
    fi

    rm -rf "$1/.fseventsd"
    rm -rf "$1/.Trashes"
    rm -rf "$1/.Spotlight-V100"
    find "$1" -name "._*" -exec rm {} \;
    find "$1" -name ".DS_Store" -exec rm {} \;

    diskutil unmount "$1"
}

function csrgen {
    if [ -z $1 ]; then
        echo "Specify FQDN"
        return 1
    fi

    openssl req -newkey rsa:2048 -nodes -keyout "${1}.key" -out "${1}.csr"
    openssl x509 -req -days 365 -in "${1}.csr" -signkey "${1}.key" -out "${1}.crt"
}

crypt() {
    echo "Crypt into file $1: $2"
    echo "$2" | openssl enc -aes-256-cbc -salt > "$1"
}

decrypt() {
    echo "Decrypt file $1"
    openssl enc -aes-256-cbc -d -in "$1"
}
